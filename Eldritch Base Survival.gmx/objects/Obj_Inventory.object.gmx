<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000000</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Creating the Enums
enum item
{
    air = 0,
    stone = 1,
    iron = 2,
    log = 3,
};
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initializing the Inventory
global.maxstacksize = 20;
width = 4;
height = 4;
box_size = Spr_Items.sprite_width;
draw_set_colour(c_white);

//Creating the ds grids
//Items
box = ds_grid_create(width,height);
ds_grid_clear(box,item.air)

//Item Count
count = ds_grid_create(width,height);
ds_grid_clear(count,0);

///Draw the Inventory
basex = view_xview+80
basey = view_yview + (view_hview/2) + 112
for (var yy = 0; yy &lt; height; yy++)
{
    for (var xx = 0; xx &lt; width; xx++)
    {
        //Switching Boxes
        var tx = basex+(xx*box_size/2)+(xx*16);
        var ty = basey+(yy*box_size/2);
        //Defining Array Positions
        slotx[xx,yy] = tx
        sloty[xx,yy] = ty
        newslot = instance_create(tx,ty,Obj_InventorySlot);
        newslot.locationx = xx;
        newslot.locationy = yy;
        slotID[xx,yy] = newslot;
    };
    basey = basey+16;
};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set the Inventory Slot Positions
basex = view_xview+80;
basey = view_yview + (view_hview/2) + 112;
for (var yy = 0; yy &lt; height; yy++)
{
    for (var xx = 0; xx &lt; width; xx++)
    {
        //Switching Boxes
        var tx = basex+(xx*box_size/2)+(xx*16);
        var ty = basey+(yy*box_size/2);
        //Resetting Slot X and Y
        slotx[xx,yy] = tx;
        sloty[xx,yy] = ty;
    };
    basey += 16;
};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the Inventory
basex = view_xview+32;
basey = view_yview + (view_hview/2) + 62;
draw_sprite(Spr_Inventory_Gui,0,basex,basey);
Invx = basex;
Invy = basey;
basex += 48;
basey += 48;
for (var yy = 0; yy &lt; height; yy++)
{
    for (var xx = 0; xx &lt; width; xx++)
    {
        //Switching Boxes
        var tx = basex+(xx*box_size/2)+(xx*16);
        var ty = basey+(yy*box_size/2);
        //Drawing Slots
        var val = box[# xx, yy];
        draw_sprite(Spr_InventorySlot,0,tx,ty);
        draw_sprite(Spr_Items,val,tx,ty);
        //Drawing Count
        if (count[# xx, yy] &gt; 1)
        {
            draw_set_colour(c_white);
            draw_roundrect(tx+21-(string_width(string(count[# xx, yy])))-1,ty+25-(string_height(string(count[# xx, yy])))-1,tx+21,ty+23,false);
            draw_set_colour(c_black);
            draw_text(tx+21-(string_width(count[# xx, yy])),ty+10,count[# xx, yy]);
        };
    };

    basey = basey+16;
};
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
